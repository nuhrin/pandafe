/*  embedded_languages.c
 *
 *  Copyright (C) 2012 by:
 *          nuhrin <nuhrin@oceanic.to>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Library General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include <string.h>
#include <glib.h>
#include "embedded_def_lang.h"
#include "embedded_sh_lang.h"
#include "embedded_@GTKSOURCEVIEW_STYLE@_xml.h"

const char* _embedded_style_id() { return "@GTKSOURCEVIEW_STYLE@"; }
const char* _embedded_style_xml() { return embedded_@GTKSOURCEVIEW_STYLE@_xml; }
const char* _embedded_style_filename() { return "@GTKSOURCEVIEW_STYLE@.xml"; }

static GSList* _language_ids = NULL;
static GHashTable* _language_id_filename_hash = NULL;
static GHashTable* _language_id_xml_hash = NULL;
static _embedded_languages_ensure_data()
{
	if (_language_ids != NULL)
		return;
	_language_id_filename_hash = g_hash_table_new(g_str_hash, g_str_equal);
	_language_id_xml_hash = g_hash_table_new(g_str_hash, g_str_equal);
	
	_language_ids = g_slist_prepend(_language_ids, "def");
	g_hash_table_insert(_language_id_filename_hash, "def", "def.lang");
	g_hash_table_insert(_language_id_xml_hash, "def", embedded_def_lang);	
	
	_language_ids = g_slist_prepend(_language_ids, "sh");
	g_hash_table_insert(_language_id_filename_hash, "sh", "sh.lang");
	g_hash_table_insert(_language_id_xml_hash, "sh", embedded_sh_lang);
}

GSList* _embedded_language_ids() 
{
	_embedded_languages_ensure_data();
	return _language_ids;
}

const char* _embedded_language_filename(const char *id) 
{
	_embedded_languages_ensure_data();
	return g_hash_table_lookup(_language_id_filename_hash, id);
}
const char* _embedded_language_xml(const char *id) 
{
	_embedded_languages_ensure_data();
	return g_hash_table_lookup(_language_id_xml_hash, id);
}

